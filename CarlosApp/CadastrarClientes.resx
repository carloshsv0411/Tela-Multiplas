<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AeREvMqsroh/AAAAAElFTkSuQmCC
</value>
  </data>
</root>